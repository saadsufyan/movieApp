{"ast":null,"code":"import _objectSpread from \"/Users/saadsufyan/Desktop/React-Redux-Starter-Files/react-redux START HERE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { API_KEY, API_URL } from \"../config\"; // action types for home\n\nexport var GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\nexport var SEARCH_MOVIES = 'SEARCH_MOVIES';\nexport var LOAD_MORE_MOVIES = 'LOAD_MORE_MOVIES';\nexport var CLEAR_MOVIES = 'CLEAR_MOVIES'; // action type for movies\n\nexport var GET_MOVIE = 'GET_MOVIE';\nexport var CLEAR_MOVIE = 'CLEAR_MOVIE'; // action for both\n\nexport var SHOW_LOADING_SPINNER = 'SHOW_LOADING_SPINNER'; // action creators for both\n\nexport function showLoadingSpinner(params) {\n  return {\n    type: SHOW_LOADING_SPINNER,\n    payload: null\n  };\n} // action creators for Home \n\nexport function getPopularMovies() {\n  var endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n  var request = fetch(endpoint).then(function (result) {\n    return result.json();\n  }).then(function (result) {\n    return result;\n  }).catch(function (error) {\n    return console.error('Error:', error);\n  });\n  return {\n    type: GET_POPULAR_MOVIES,\n    payload: request\n  };\n}\nexport function searchMovies(searchTerm) {\n  var endpoint;\n\n  if (!searchTerm) {\n    endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n  } else {\n    endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm);\n  }\n\n  var request = fetch(endpoint).then(function (result) {\n    return result.json();\n  }).then(function (result) {\n    return _objectSpread({}, result, {\n      searchTerm: searchTerm\n    });\n  }).catch(function (error) {\n    return console.error('Error:', error);\n  });\n  return {\n    type: SEARCH_MOVIES,\n    payload: request\n  };\n}\nexport function loadMoreMovies(searchTerm, currentPage) {\n  var endpoint;\n\n  if (searchTerm === '') {\n    endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(currentPage + 1);\n  } else {\n    endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&query=\").concat(searchTerm, \"&page=\").concat(currentPage + 1);\n  }\n\n  var request = fetch(endpoint).then(function (result) {\n    return result.json();\n  }).then(function (result) {\n    return result;\n  }).catch(function (error) {\n    return console.error('Error:', error);\n  });\n  return {\n    type: LOAD_MORE_MOVIES,\n    payload: request\n  };\n}\nexport function clearMovies() {\n  return {\n    type: CLEAR_MOVIES,\n    payload: null\n  };\n} // action creators for Movie \n\nexport function clearMovie() {\n  return {\n    type: CLEAR_MOVIE,\n    payload: null\n  };\n}\nexport function getMovie(movieId) {\n  var endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n  var newState = {};\n  var request = fetch(endpoint).then(function (result) {\n    return result.json();\n  }).then(function (result) {\n    if (result.status_code) {\n      // If we don't find any movie\n      return newState;\n    } else {\n      newState = {\n        movie: result\n      };\n      endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n      return fetch(endpoint).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        var directors = result.crew.filter(function (member) {\n          return member.job === 'director';\n        });\n        newState.actors = result.cast;\n        newState.directors = directors;\n      });\n    }\n  }).catch(function (error) {\n    return console.error('Error:', error);\n  });\n}","map":{"version":3,"sources":["/Users/saadsufyan/Desktop/React-Redux-Starter-Files/react-redux START HERE/src/actions/index.js"],"names":["API_KEY","API_URL","GET_POPULAR_MOVIES","SEARCH_MOVIES","LOAD_MORE_MOVIES","CLEAR_MOVIES","GET_MOVIE","CLEAR_MOVIE","SHOW_LOADING_SPINNER","showLoadingSpinner","params","type","payload","getPopularMovies","endpoint","request","fetch","then","result","json","catch","error","console","searchMovies","searchTerm","loadMoreMovies","currentPage","clearMovies","clearMovie","getMovie","movieId","newState","status_code","movie","directors","crew","filter","member","job","actors","cast"],"mappings":"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","sourcesContent":["import { API_KEY, API_URL } from \"../config\";\n\n// action types for home\n\nexport const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES';\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES';\nexport const LOAD_MORE_MOVIES = 'LOAD_MORE_MOVIES';\nexport const CLEAR_MOVIES = 'CLEAR_MOVIES';\n\n// action type for movies\n\nexport const GET_MOVIE = 'GET_MOVIE';\nexport const CLEAR_MOVIE = 'CLEAR_MOVIE';\n\n// action for both\n\nexport const SHOW_LOADING_SPINNER = 'SHOW_LOADING_SPINNER';\n\n// action creators for both\n\nexport function showLoadingSpinner(params) {\n    return {\n        type: SHOW_LOADING_SPINNER,\n        payload: null\n    }    \n\n}\n\n// action creators for Home \n\nexport function getPopularMovies() {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    const request = fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n        return result;\n    })\n    .catch(error => console.error('Error:', error))\n\n    return {\n        type: GET_POPULAR_MOVIES,\n        payload: request\n    }\n}\n\nexport function searchMovies(searchTerm) {\n    let endpoint;\n    if (!searchTerm) {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n\n    const request = fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n        return {...result, searchTerm};\n    })\n    .catch(error => console.error('Error:', error))\n\n    return {\n        type: SEARCH_MOVIES,\n        payload: request\n    }\n}\n\nexport function loadMoreMovies(searchTerm, currentPage) {\n    let endpoint;\n\n    if (searchTerm === '') {\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n        endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    const request = fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n        return result;\n    })\n    .catch(error => console.error('Error:', error))\n\n    return {\n        type: LOAD_MORE_MOVIES,\n        payload: request\n    }    \n}\n\nexport function clearMovies() {\n    return {\n        type: CLEAR_MOVIES,\n        payload: null\n    }    \n\n}\n\n\n// action creators for Movie \n\nexport function  clearMovie() {\n    return {\n        type: CLEAR_MOVIE,\n        payload: null\n    }    \n}\n\nexport function getMovie(movieId) {\n\n    let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    let newState = {};\n\n    const request = fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n\n        if (result.status_code) {\n        // If we don't find any movie\n            return newState;\n        } else {\n            newState = {movie:result};\n            endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n\n            return fetch(endpoint)\n                .then(result => result.json())\n                .then(result => {\n                    const directors = result.crew.filter((member) =>  member.job === 'director');\n                    newState.actors = result.cast;\n                    newState.directors = directors;\n                }) \n        }\n    })\n    .catch(error => console.error('Error:', error));\n}"]},"metadata":{},"sourceType":"module"}